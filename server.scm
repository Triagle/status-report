(require-extension medea shell tcp6 socket)
(use medea shell tcp6 socket)
(define (get-json path)
  (with-input-from-file path
    (lambda ()
      (read-json (current-input-port)))))
(define (make-status test)
  (cons (car test) (string-trim-both (capture ,(cdr test)))))
(define (make-status-report tests)
  (map make-status tests))
(define (alist->json alist)
  (with-output-to-string (lambda ()
                           (write-json alist))))
(define (count-bytes string)
  (string-length string))
(define (server-start status-file)
  (let loop ((connection (tcp-listen 1337)))
    (define-values (i o) (tcp-accept connection))
    (when (equal? (read-line i) "STATUS")
      (write-line (alist->json (make-status-report (get-json status-file))) o))
    (close-input-port i)
    (close-output-port o)
    (loop connection)))
(define (main args)
  (if (not (= (length args) 1))
      (print "Usage: status-report-server [config file path]")
      (server-start (car args))))
(main (command-line-arguments))
